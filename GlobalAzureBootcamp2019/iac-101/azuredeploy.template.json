{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "eastus",
			"metadata": {
				"displayName": "Azure region",
				"description": "The Azure region within which to deploy. Examples: 'eastus', 'westus', and so on. See https://azure.microsoft.com/regions/."
			}
		},
		"resourceGroupName": {
			"type": "string",
			"defaultValue": "gab19",
			"metadata": {
				"displayName": "Resource Group Name",
				"description": "The resource group name that should contain the VM and its related resources, such as NIC and public IP."
			}
		},
		"virtualMachineName": {
			"type": "string",
			"defaultValue": "gab19-vm",
			"metadata": {
				"displayName": "Virtual Machine name",
				"description": "The VM name. Should be unique within the resource group."
			}
		},
		"virtualMachineSize": {
			"type": "string",
			"defaultValue": "Standard_B1s",
			"metadata": {
				"displayName": "Virtual Machine size",
				"description": "The VM size. See https://docs.microsoft.com/azure/virtual-machines/windows/sizes, https://docs.microsoft.com/azure/virtual-machines/linux/sizes, or use Azure CLI command 'az vm list-sizes'."
			}
		},
		"publisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer",
			"metadata": {
				"displayName": "Publisher",
				"description": "CLI: az vm image list-publishers -l [Azure region]. For Windows Server 2016/2019, use MicrosoftWindowsServer. For Windows 10, use MicrosoftWindowsDesktop"
			}
		},
		"offer": {
			"type": "string",
			"defaultValue": "WindowsServer",
			"metadata": {
				"displayName": "Offer",
				"description": "CLI: az vm image list-offers -l [Azure region] --publisher [Publisher]. For Windows Server 2016/2019, use WindowsServer. For Windows 10, use Windows-10"
			}
		},
		"sku": {
			"type": "string",
			"defaultValue": "2019-Datacenter",
			"metadata": {
				"displayName": "SKU",
				"description": "CLI: az vm image list-skus -l [Azure region] --publisher [Publisher] --offer [Offer]. For Windows Server 2016, use 2016-Datacenter or 2016-Datacenter-with-Containers.  For Windows Server 2019, use 2019-Datacenter or 2019-Datacenter-with-Containers. For Windows 10 1809, use rs5-pro"
			}
		},
		"version": {
			"type": "string",
			"defaultValue": "latest",
			"metadata": {
				"displayName": "Version",
				"description": "Image version. Typically use latest."
			}
		},
		"licenseType": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"displayName": "License Type",
				"description": "For Windows Server 2016/2019, leave blank. For Windows 10, use Windows_Client"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "gab19admin",
			"metadata": {
				"displayName": "VM administrator username",
				"description": "VM administrator username"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"displayName": "VM administrator password",
				"description": "VM administrator password"
			}
		},
		"osDiskStorageType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS"
			],
			"defaultValue": "Premium_LRS",
			"metadata": {
				"displayName": "OS disk storage type",
				"description": "OS disk storage type. Standard_LRS uses HDD storage, Premium_LRS uses SSD storage"
			}
		},
		"osDiskSizeInGB": {
			"type": "int",
			"defaultValue": 128,
			"minValue": 32,
			"maxValue": 1023,
			"metadata": {
				"displayName": "OS disk size",
				"description": "OS disk size in GB"
			}
		},
		"publicIpAddressType": {
			"type": "string",
			"allowedValues": [
				"Dynamic",
				"Static"
			],
			"defaultValue": "Dynamic",
			"metadata": {
				"displayName": "Public IP address type",
				"description": "The public IP address type: Static or Dynamic. Use Dynamic unless you need a static public IP."
			}
		},
		"publicIpAddressSku": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"defaultValue": "Basic",
			"metadata": {
				"displayName": "Public IP address SKU",
				"description": "The public IP address SKU to use. See https://docs.microsoft.com/azure/virtual-network/virtual-network-ip-addresses-overview-arm"
			}
		},
		"virtualNetworkName": {
			"type": "string",
			"defaultValue": "gab19-vnet",
			"metadata": {
				"displayName": "VNet",
				"description": "Virtual network into which to deploy the VM"
			}
		},
		"virtualNetworkAddressSpace": {
			"type": "string",
			"defaultValue": "192.168.0.0/16",
			"metadata": {
				"displayName": "VNet address space",
				"description": "Virtual network overall network address space. Subnets will use part of this."
			}
		},
		"subnetName": {
			"type": "string",
			"defaultValue": "subnet1",
			"metadata": {
				"displayName": "Subnet",
				"description": "Subnet into which to deploy the VM"
			}
		},
		"subnetAddressSpace": {
			"type": "string",
			"defaultValue": "192.168.1.0/24",
			"metadata": {
				"displayName": "Subnet address space",
				"description": "Network address space for the subnet in the VNet."
			}
		},
        "networkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "displayName": "NSG Name",
                "description": "Name for the Network Security Group that will be associated with the subnet"
            }
        },
        "networkSecurityGroupRule_Name": {
            "type": "string",
            "metadata": {
                "displayName": "NSG Rule Name",
                "description": "Name for the first (non-default) inbound rule to be created on the NSG"
            }
        },
        "networkSecurityGroupRule_Source": {
            "type": "string",
            "metadata": {
                "displayName": "NSG Rule Source",
                "description": "Source address range for the NSG rule created by this template"
            }
        },
        "networkSecurityGroupRule_Priority": {
            "type": "int",
            "defaultValue": 100,
            "metadata": {
                "displayName": "NSG Rule Priority",
                "description": "Priority for the NSG rule created by this template"
            }
        },
		"vmTimeZone": {
			"type": "string",
			"defaultValue": "Eastern Standard Time",
			"minLength": 2,
			"metadata": {
				"description": "Time zone of the VMs. Type '[TimeZoneInfo]::GetSystemTimeZones().Id' in PowerShell to get the list. Note that 'UTC' works but 'UTC+xx' does NOT work."
			}
		}
	},
	"variables": {
		"vnetId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
		"osDiskName": "[concat(parameters('virtualMachineName'), '-os')]",
		"networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
		"enableAcceleratedNetworking": false,
		"publicIpAddressName": "[concat(parameters('virtualMachineName'), '-pip')]",
        "computeApiVersion": "2018-06-01",
        "networkApiVersion": "2018-08-01",
		"storageApiVersion": "2018-07-01"
	},
	"resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('networkSecurityGroupName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "[parameters('networkSecurityGroupRule_Name')]",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('networkSecurityGroupRule_Source')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": "[parameters('networkSecurityGroupRule_Priority')]",
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressSpace')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ],
                "virtualNetworkPeerings": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
            ]
        },
		{
			"name": "[variables('publicIpAddressName')]",
			"type": "Microsoft.Network/publicIpAddresses",
			"apiVersion": "[variables('networkApiVersion')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
			},
			"sku": {
				"name": "[parameters('publicIpAddressSku')]"
			}
		},
		{
			"name": "[variables('networkInterfaceName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "[variables('networkApiVersion')]",
			"location": "[parameters('location')]",
			"properties": {
				"enableAcceleratedNetworking": "[variables('enableAcceleratedNetworking')]",
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('subnetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"publicIpAddress": {
								"id": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
							}
						}
					}
				]
			},
            "dependsOn": [
				"[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
		},
		{
			"name": "[parameters('virtualMachineName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "[variables('computeApiVersion')]",
			"location": "[parameters('location')]",
			"properties": {
				"osProfile": {
					"computerName": "[parameters('virtualMachineName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
						"provisionVmAgent": "true",
						"timeZone": "[parameters('vmTimeZone')]"
					}
				},
				"hardwareProfile": {
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('publisher')]",
						"offer": "[parameters('offer')]",
						"sku": "[parameters('sku')]",
						"version": "[parameters('version')]"
					},
					"osDisk": {
						"createOption": "FromImage",
						"name": "[variables('osDiskName')]",
						"diskSizeGB": "[parameters('osDiskSizeInGB')]",
						"managedDisk": {
							"storageAccountType": "[parameters('osDiskStorageType')]"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
						}
					]
				},
				"licenseType": "[parameters('licenseType')]"
			},
			"resources": [],
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
			]
		}
	],
	"outputs": {
		"resourceGroupName": {
			"type": "string",
			"value": "[parameters('resourceGroupName')]"
		},
		"virtualMachineName": {
			"type": "string",
			"value": "[parameters('virtualMachineName')]"
		}
	}
}