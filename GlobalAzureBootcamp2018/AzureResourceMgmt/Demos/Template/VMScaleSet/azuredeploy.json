{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Azure region",
                "description": "Azure region. Do NOT use human-readable form; use short form. For example, use 'eastus' NOT 'East US'. This is so LB public IP DNS FQDN succeeds, since Azure PIP DNS FQDNs include regionalization subdomain."
            }
        },
        "vmssName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssFqdnLabel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleMinimum": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleMaximum": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleDefault": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleTriggerCpuPctGreaterThan": {
            "type": "int",
            "defaultValue": 75,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleTriggerCpuPctLessThan": {
            "type": "int",
            "defaultValue": 25,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleChangeCountIncrease": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssAutoScaleChangeCountDecrease": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssUpgradePolicy": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmssOverprovision": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmPublisher": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmOffer": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmInstanceCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmAdminUserName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "displayName": "",
                "description": ""
            }
        },
        "vmProvisionVMAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "displayName": "Provision VM Agent",
                "description": "Provision VM Agent"
            }
        },
        "vmEnableAutomaticUpdates": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "displayName": "Enable automatic VM updates",
                "description": "Enable automatic VM updates"
            }
        },
        "vmEnableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "displayName": "Enable Accelerated VM Networking",
                "description": "Whether to enable VM accelerated networking. Not all VM sizes support accelerated networking."
            }
        },
        "vmOsDiskStorageType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "defaultValue": "Premium_LRS",
            "metadata": {
                "displayName": "OS disk storage type",
                "description": "OS disk storage type. Standard_LRS uses HDD storage, Premium_LRS uses SSD storage"
            }
        },
        "vmOsDiskCaching": {
            "type": "string",
            "allowedValues": [
                "None",
                "ReadOnly",
                "ReadWrite"
            ],
            "defaultValue": "ReadWrite",
            "metadata": {
                "displayName": "OS disk caching",
                "description": "OS disk caching"
            }
        },
        "vmOsDiskSizeInGB": {
            "type": "int",
            "defaultValue": 129,
            "minValue": 32,
            "maxValue": 1023,
            "metadata": {
                "displayName": "OS disk size",
                "description": "OS disk size in GB"
            }
        },
		"vmTimeZone": {
			"type": "string",
			"defaultValue": "UTC",
			"minLength": 2,
			"metadata": {
				"description": "Time zone of the VMs. Type '[TimeZoneInfo]::GetSystemTimeZones().Id' in PowerShell to get the list. Note that 'UTC' works but 'UTC+xx' does NOT work."
			}
		},
        "vnetResourceGroupName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Existing VNet Resource Group Name",
                "description": "Existing VNet Resource Group Name"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Existing VNet Name to deploy VMSS into",
                "description": "Existing VNet Name to deploy VMSS into"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Existing Subnet Name to deploy VMSS into",
                "description": "Existing Subnet Name to deploy VMSS into"
            }
        },
        "nsgName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "NSG Name",
                "description": "Network Security Group Name"
            }
        },
        "nsgRule_Name_AdminAccess": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "NSG Rule Name for Admin Access",
                "description": "NSG Rule Name for Admin Access"
            }
        },
        "nsgRule_Source_AdminAccess": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "NSG Rule Source Range for Admin Access",
                "description": "NSG Rule Source Range for Admin Access"
            }
        },
        "loadBalancerSkuName": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "displayName": "Load balancer SKU",
                "description": "Load balancer SKU"
            }
        },
        "loadBalancerPublicIPAddressSkuName": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "displayName": "Load balancer public IP Address SKU",
                "description": "Load balancer public IP Address SKU"
            }
        },
        "loadBalancerPublicIPAddressAllocationMethod": {
            "type": "string",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "defaultValue": "Dynamic",
            "metadata": {
                "displayName": "Load balancer public IP Address Allocation Method",
                "description": "Load balancer public IP Address Allocation Method"
            }
        },
        "loadBalancerRule_Protocol": {
            "type": "string",
            "allowedValues": [
                "Tcp",
                "Udp",
                "All"
            ],
            "defaultValue": "Tcp",
            "metadata": {
                "displayName": "Load Balancer Rule Protocol",
                "description": "Load Balancer Rule Protocol"
            }
        },
        "inboundNatPool_PortRangeFrontEnd_Start": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 1,
            "maxValue": 65535,
            "metadata": {
                "displayName": "Inbound NAT Pool front end port number range start",
                "description": "Inbound NAT Pool front end port number range start"
            }
        },
        "inboundNatPool_PortRangeFrontEnd_End": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 1,
            "maxValue": 65535,
            "metadata": {
                "displayName": "Inbound NAT Pool front end port number range end",
                "description": "Inbound NAT Pool front end port number range end"
            }
        },
        "inboundNatPool_PortBackEnd": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 1,
            "maxValue": 65535,
            "metadata": {
                "displayName": "Back end port number",
                "description": "Back end port number"
            }
        },
        "inboundNatPool_Protocol": {
            "type": "string",
            "allowedValues": [
                "Tcp",
                "Udp",
                "All"
            ],
            "defaultValue": "Tcp",
            "metadata": {
                "displayName": "Inbound NAT Pool Protocol",
                "description": "Inbound NAT Pool Protocol"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Diagnostics storage account name",
                "description": "Diagnostics storage account name"
            }
        },
        "diagnosticsStorageAccountResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "displayName": "Diagnostics storage account resource group",
                "description": "Diagnostics storage account resource group"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "displayName": "Base URL for DSC resources",
                "description": "Base URL for DSC resources. This should not include the folder that holds DSC zip files and other resources."
            }
        },
        "dscFolder": {
            "type": "string",
            "metadata": {
                "displayName": "Folder for DSC resources",
                "description": "Folder under Base URL that contains the DSC resources to be used with VMs in this VMSS."
            }
        },
        "dscFileName": {
            "type": "string",
            "metadata": {
                "displayName": "DSC .zip file",
                "description": "Zip file name that contains the DSC module file and script"
            }
        },
        "dscModule": {
            "type": "string",
            "metadata": {
                "displayName": "DSC module file",
                "description": "DSC .ps1 file contained in the DSC .zip file"
            }
        },
        "dscFunction": {
            "type": "string",
            "metadata": {
                "displayName": "DSC function",
                "description": "Name of the DSC function to call inside the DSC module file"
            }
        },
        "scriptFolder": {
            "type": "string",
            "metadata": {
                "displayName": "Folder for Script resources",
                "description": "Folder under Base URL that contains the Script resources to be used with VMs in this VMSS. Do not leave this path blank, or remove it from script file URL and execution path below."
            }
        },
        "scriptFileName": {
            "type": "string",
            "metadata": {
                "displayName": "Script file",
                "description": "Script file name"
            }
        },
        "octopusServerUrl": {
            "type": "string",
            "metadata": {
                "displayName": "Octopus Server URL",
                "description": "Octopus Server URL"
            }
        },
        "octopusApiKey": {
            "type": "string",
            "metadata": {
                "displayName": "Octopus API Key",
                "description": "Octopus API Key"
            }
        },
        "octopusEnvironments": {
            "type": "string",
            "metadata": {
                "displayName": "Octopus Environments",
                "description": "Octopus Environments (comma-delimited)"
            }
        },
        "octopusRoles": {
            "type": "string",
            "metadata": {
                "displayName": "Octopus Roles",
                "description": "Octopus Roles (comma-delimited)"
            }
        },
        "octopusCommunicationMode": {
            "type": "string",
            "allowedValues": [
                "Listen",
                "Poll"
            ],
            "metadata": {
                "displayName": "Octopus Communication Mode",
                "description": "Octopus Communication Mode"
            }
        },
        "octopusListenOnPort": {
            "type": "int",
            "defaultValue": 10933,
            "minValue": 0,
            "maxValue": 65535,
            "metadata": {
                "displayName": "Octopus Port",
                "description": "Octopus Port to listen on"
            }
        },
        "octopusPublicHostNameConfiguration": {
            "type": "string",
            "allowedValues": [
                "PublicIP",
                "FQDN",
                "ComputerName",
                "Custom"
            ],
            "metadata": {
                "displayName": "Octopus Public Hostname Configuration",
                "description": "Octopus Public Hostname Configuration"
            }
        },
        "octopusCustomPublicHostName": {
            "type": "string",
            "metadata": {
                "displayName": "Octopus Custom Public Hostname",
                "description": "Octopus Custom Public Hostname when Public Hostname Configuration of Custom is selected"
            }
        }
    },
    "variables": {
        "vmNameInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "vmssAutoScaleSettingName": "[concat(parameters('vmssName'), '_autoScaleSetting')]",
        "vmssAutoScaleProfileName": "[concat(parameters('vmssName'), '_autoScaleProfile')]",
        "vmssNicName": "[concat(parameters('vmssName'),'_nic')]",
        "vmssIpConfigName": "[concat(parameters('vmssName'),'_ipConfig')]",
        "lbName": "[concat(parameters('vmssName'), '_lb')]",
        "lbPublicIPAddressName": "[concat(variables('lbName'), '_pip')]",
        "lbFrontEndName": "[concat(variables('lbName'), '_frontEnd')]",
        "lbBackEndName": "[concat(variables('lbName'), '_backEnd')]",
        "lbProbeName": "[concat(variables('lbName'), '_httpProbe')]",
        "lbNatPoolName": "[concat(variables('lbName'), '_natPool')]",
        "lbRuleName_port80": "[concat(variables('lbName'), '_port80')]",
        "lbRuleName_port443": "[concat(variables('lbName'), '_port443')]",
        "diagnosticsStorageAccountId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]",
        "diagnosticsMetricsResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachineScaleSets/', variables('vmNameInfix'))]",
        "diagnosticsBlock01": "<WadCfg><DiagnosticMonitorConfiguration overallQuotaInMB=\"16384\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\">",
        "diagnosticsBlock02": "<Directories scheduledTransferPeriod=\"PT1M\"><IISLogs containerName=\"iislogs\" /><FailedRequestLogs containerName=\"iisfailed\" /></Directories>",
        "diagnosticsBlock03": "<WindowsEventLog scheduledTransferPeriod=\"PT1M\"><DataSource name=\"Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]\" /><DataSource name=\"Security!*[System[(Level = 1 or Level = 2 or Level = 3)]]\" /><DataSource name=\"System!*[System[(Level = 1 or Level = 2 or Level = 3)]]\" /><DataSource name=\"System!*[System[Provider[@Name='Microsoft Antimalware']]]\" /></WindowsEventLog>",
        "diagnosticsBlock04": "[concat('<Metrics resourceId=\"', variables('diagnosticsMetricsResourceId'), '\">', '<MetricAggregation scheduledTransferPeriod=\"PT1M\"/><MetricAggregation scheduledTransferPeriod=\"PT1H\"/></Metrics>')]",
        "diagnosticsBlock05": "<DiagnosticInfrastructureLogs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Warning\" />",
        "diagnosticsBlock06": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Interrupt Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU interrupt time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Parking Status\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU parking status\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\% Processor Performance\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processor percent perf.\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processor frequency\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\">",
        "diagnosticsBlock07": "<annotation displayName=\"Processes\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Thread(_Total)\\Context Switches/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Context switches\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Cache Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Cache faults\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Page Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page faults\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Page Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page reads\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pages/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Memory pages\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Transition Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\">",
        "diagnosticsBlock08": "<annotation displayName=\"Transition faults\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pool Paged Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Paged pool\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pool Nonpaged Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Non-paged pool\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Process total time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Page Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Process page faults\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Process total threads\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Process total handles\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Private Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Process function bytes\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Working Set\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Process working set\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Working Set - Private\" sampleRate=\"PT15S\" unit=\"Bytes\">",
        "diagnosticsBlock09": "<annotation displayName=\"Process function working set\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Bytes Total/Sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Web service bytes\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\ISAPI Extension Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"ISAPI extension requests\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Connection Attempts/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Web connection attempts\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Current Connections\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Web current connections\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Get Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Web get requests\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Post Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\">",
        "diagnosticsBlock10": "<annotation displayName=\"Web post requests\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connections Established\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections established\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connection Failures\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections failed\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connections Reset\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections reset\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Sent/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP segments sent\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Received/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP segments received\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Retransmitted/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP seg. restransmitted\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Jit(_Global_)\\% Time in Jit\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\".NET CLR time in jit\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Loading(_Global_)\\% Time Loading\" sampleRate=\"PT15S\" unit=\"Percent\">",
        "diagnosticsBlock11": "<annotation displayName=\".NET CLR time loading\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\Current Queue Length\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR queue length\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\Contention Rate / sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR contention rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\# of current logical Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR logical threads\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\# of current physical Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR phys. threads\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\% Time in GC\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\".NET CLR time in GC\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Allocated Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\".NET CLR allocated\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 0 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\">",
        "diagnosticsBlock12": "<annotation displayName=\".NET CLR gen 0 heap size\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 1 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR gen 1 heap size\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 2 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR gen 2 heap size\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Large Object Heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR large obj. heap size\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\# Bytes in all Heaps\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR heap bytes\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Networking(_Global_)\\Connections Established\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR connections \"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Remoting(_Global_)\\Remote Calls/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR remote calls\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Exceptions(_Global_)\\# of Exceps Thrown / sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR exception rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Interop(_Global_)\\# of marshalling\" sampleRate=\"PT15S\" unit=\"Count\">",
        "diagnosticsBlock13": "<annotation displayName=\".NET CLR interop marsh.\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Applications Running\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET running apps\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Request Wait Time\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET wait time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Request Execution Time\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET execution time\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Queued\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET req. queued\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Rejected\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET req. rejected\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Requests/Sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"ASP.NET requests\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Errors Total/Sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"ASP.NET errors\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Requests In Application Queue\" sampleRate=\"PT15S\" unit=\"Count\">",
        "diagnosticsBlock14": "<annotation displayName=\"ASP.NET req. in app queues\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Pipeline Instance Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET pipeline instances\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Requests Executing\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"ASP.NET req. executing\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Buffer Manager\\Page life expectancy\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL buffer page life\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Databases\\Transactions/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL transaction rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Databases\\Data file(s) size (KB)\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL total data file KB\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Databases\\Log file(s) size (KB)\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL total log file KB\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Databases\\Log file(s) used size (KB)\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL total log file used KB\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:General Statistics\\User Connections\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\">",
        "diagnosticsBlock15": "<annotation displayName=\"SQL user connections\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:Memory Manager\\Total Server Memory (KB)\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL total memory KB\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:SQL Statistics\\Batch Requests/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL batch request rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:SQL Statistics\\SQL Attention Rate\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL attention rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer:SQL Statistics\\SQL Re-Compilations/Sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL recompilation rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQLServer: SQL errors\\Errors/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL error rate\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQL Server: Workload group stats\\Active requests\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL active requests\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQL Server: Workload group stats\\Blocked tasks\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL blocked tasks\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQL Server: Workload group stats\\CPU usage %\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\">",
        "diagnosticsBlock16": "<annotation displayName=\"SQL CPU percentage\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\SQL Server: Workload group stats\\Queued requests\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"SQL queued requests\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "diagnosticsBlock17": "</DiagnosticMonitorConfiguration></WadCfg>",
        "diagnosticsBlock": "[concat(variables('diagnosticsBlock01'), variables('diagnosticsBlock02'), variables('diagnosticsBlock03'), variables('diagnosticsBlock04'), variables('diagnosticsBlock05'), variables('diagnosticsBlock06'), variables('diagnosticsBlock07'), variables('diagnosticsBlock08'), variables('diagnosticsBlock09'), variables('diagnosticsBlock10'), variables('diagnosticsBlock11'), variables('diagnosticsBlock12'), variables('diagnosticsBlock13'), variables('diagnosticsBlock14'), variables('diagnosticsBlock15'), variables('diagnosticsBlock16'), variables('diagnosticsBlock17'))]",
        "computeApiVersion": "2017-03-30",
        "networkApiVersion": "2018-01-01",
        "storageApiVersion": "2015-06-15",
        "insightsApiVersion": "2015-04-01",
        "diagnosticsApiVersion": "2017-05-01-preview"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": "[parameters('vmInstanceCount')]"
            },
            "name": "[parameters('vmssName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "[parameters('vmssUpgradePolicy')]"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmNameInfix')]",
                        "adminUsername": "[parameters('vmAdminUserName')]",
                        "adminPassword": "[parameters('vmAdminPassword')]",
                        "windowsConfiguration": {
                            "provisionVMAgent": "[parameters('vmProvisionVMAgent')]",
                            "timeZone": "[parameters('vmTimeZone')]",
                            "enableAutomaticUpdates": "[parameters('vmEnableAutomaticUpdates')]"
                        },
                        "secrets": []
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmPublisher')]",
                            "offer": "[parameters('vmOffer')]",
                            "sku": "[parameters('vmSku')]",
                            "version": "[parameters('vmVersion')]"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "[parameters('vmOsDiskCaching')]",
                            "diskSizeGB": "[parameters('vmOsDiskSizeInGB')]",
                            "managedDisk": {
                                "storageAccountType": "[parameters('vmOsDiskStorageType')]"
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('vmssNicName')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": "[parameters('vmEnableAcceleratedNetworking')]",
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('vmssIpConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('lbBackEndName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/inboundNatPools/', variables('lbNatPoolName'))]"
                                                    }
                                                ],
                                                "networkSecurityGroup": {
                                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "Microsoft.Insights.VMDiagnosticsSettings",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "type": "IaaSDiagnostics",
                                    "typeHandlerVersion": "1.5",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "xmlCfg": "[base64(variables('diagnosticsBlock'))]",
                                        "storageAccount": "[parameters('diagnosticsStorageAccountName')]"
                                    },
                                    "protectedSettings": {
                                        "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listkeys(variables('diagnosticsStorageAccountId'), variables('storageApiVersion')).key1]",
                                        "storageAccountEndPoint": "https://core.windows.net"
                                    }
                                }
                            },
                            {
                                "name": "Microsoft.IaaSAntimalware",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Security",
                                    "type": "IaaSAntimalware",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "AntimalwareEnabled": true,
                                        "RealtimeProtectionEnabled": "true",
                                        "ScheduledScanSettings": {
                                            "isEnabled": "true",
                                            "day": "7",
                                            "time": "120",
                                            "scanType": "Quick"
                                        },
                                        "Exclusions": {
                                            "Extensions": "",
                                            "Paths": "",
                                            "Processes": ""
                                        }
                                    }
                                }
                            },
                            {
                                "name": "Microsoft.Powershell.DSC",
                                "properties": {
                                    "publisher": "Microsoft.Powershell",
                                    "type": "DSC",
                                    "typeHandlerVersion": "2.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "configuration": {
                                            "url": "[concat(parameters('_artifactsLocation'), '/', parameters('dscFolder'), '/', parameters('dscFileName'))]",
                                            "script": "[parameters('dscModule')]",
                                            "function": "[parameters('dscFunction')]"
                                        }
                                    }
                                }
                            },
                            {
                                "name": "OctopusDeployWindowsTentacle",
                                "properties": {
                                    "publisher": "OctopusDeploy.Tentacle",
                                    "type": "OctopusDeployWindowsTentacle",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "OctopusServerUrl": "[parameters('octopusServerUrl')]",
                                        "Environments": "[split(parameters('octopusEnvironments'), ',')]",
                                        "Roles": "[split(parameters('octopusRoles'), ',')]",
                                        "CommunicationMode": "[parameters('octopusCommunicationMode')]",
                                        "Port": "[parameters('octopusListenOnPort')]",
                                        "PublicHostNameConfiguration": "[parameters('octopusPublicHostNameConfiguration')]",
                                        "CustomPublicHostName": "[parameters('octopusCustomPublicHostName')]"
                                    },
                                    "protectedSettings": {
                                        "ApiKey": "[parameters('octopusApiKey')]"
                                    }
                                }
                            },
                            {
                                "name": "customScript",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "settings": {
                                        "fileUris": [
                                            "[concat(parameters('_artifactsLocation'), '/', parameters('scriptFolder'), '/', parameters('scriptFileName'))]"
                                        ]
                                    },
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', parameters('scriptFolder'), '/', parameters('scriptFileName'))]"
                                    },
                                    "type": "CustomScriptExtension"
                                }
                            }
                        ]
                    }
                },
                "overprovision": "[parameters('vmssOverprovision')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "name": "[variables('vmssAutoScaleSettingName')]",
            "apiVersion": "[variables('insightsApiVersion')]",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "profiles": [
                    {
                        "name": "[variables('vmssAutoScaleProfileName')]",
                        "capacity": {
                            "minimum": "[parameters('vmssAutoScaleMinimum')]",
                            "maximum": "[parameters('vmssAutoScaleMaximum')]",
                            "default": "[parameters('vmssAutoScaleDefault')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('vmssAutoScaleTriggerCpuPctGreaterThan')]"
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "[parameters('vmssAutoScaleChangeCountIncrease')]",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "[parameters('vmssAutoScaleTriggerCpuPctLessThan')]"
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "[parameters('vmssAutoScaleChangeCountDecrease')]",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "name": "[variables('vmssAutoScaleSettingName')]",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "sku": {
                "name": "[parameters('loadBalancerSkuName')]"
            },
            "location": "[parameters('location')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBackEndName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[variables('lbRuleName_port80')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('lbBackEndName'))]"
                            },
                            "protocol": "[parameters('loadBalancerRule_Protocol')]",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('lbProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('lbRuleName_port443')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('lbBackEndName'))]"
                            },
                            "protocol": "[parameters('loadBalancerRule_Protocol')]",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('lbProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('lbProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('lbNatPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
                            },
                            "protocol": "[parameters('inboundNatPool_Protocol')]",
                            "frontendPortRangeStart": "[parameters('inboundNatPool_PortRangeFrontEnd_Start')]",
                            "frontendPortRangeEnd": "[parameters('inboundNatPool_PortRangeFrontEnd_End')]",
                            "backendPort": "[parameters('inboundNatPool_PortBackEnd')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', variables('lbName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
                    ],
                    "apiVersion": "[variables('diagnosticsApiVersion')]",
                    "properties": {
                        "name": "[concat(variables('lbName'), '_diagnostics_logs')]",
                        "storageAccountId": "[variables('diagnosticsStorageAccountId')]",
                        "logs": [
                            {
                                "category": "LoadBalancerAlertEvent",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            },
                            {
                                "category": "LoadBalancerProbeHealthStatus",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            }
                        ]
                    }
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPublicIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "[parameters('loadBalancerPublicIPAddressSkuName')]"
            },
            "name": "[variables('lbPublicIPAddressName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "[parameters('loadBalancerPublicIPAddressAllocationMethod')]",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[toLower(parameters('vmssFqdnLabel'))]",
                    "fqdn": "concat([toLower(parameters('vmssFqdnLabel'))], '.', [parameters('location')], '.cloudapp.azure.com')"
                }
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', variables('lbPublicIPAddressName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPAddressName'))]"
                    ],
                    "apiVersion": "[variables('diagnosticsApiVersion')]",
                    "properties": {
                        "name": "[concat(variables('lbPublicIPAddressName'), '_diagnostics_logs')]",
                        "storageAccountId": "[variables('diagnosticsStorageAccountId')]",
                        "logs": [
                            {
                                "category": "DDoSProtectionNotifications",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            }
                        ]
                    }
                }
            ],
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('nsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "port80",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "port443",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[parameters('nsgRule_Name_AdminAccess')]",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('nsgRule_Source_AdminAccess')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', parameters('nsgName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    ],
                    "apiVersion": "[variables('diagnosticsApiVersion')]",
                    "properties": {
                        "name": "[concat(parameters('nsgName'), '_diagnostics_logs')]",
                        "storageAccountId": "[variables('diagnosticsStorageAccountId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                }
                            }
                        ]
                    }
                }
            ],
            "dependsOn": []
        }
    ]
}